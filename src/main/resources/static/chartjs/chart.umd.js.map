{"version":3,"file":"chart.umd.js","sources":["../src/helpers/helpers.core.ts","../src/helpers/helpers.math.ts","../src/helpers/helpers.collection.ts","../src/helpers/helpers.extras.ts","../src/core/core.animator.js","../node_modules/.pnpm/@kurkle+color@0.3.2/node_modules/@kurkle/color/dist/color.esm.js","../src/helpers/helpers.color.ts","../src/core/core.animations.defaults.js","../src/helpers/helpers.intl.ts","../src/core/core.ticks.js","../src/core/core.defaults.js","../src/core/core.layouts.defaults.js","../src/core/core.scale.defaults.js","../src/helpers/helpers.dom.ts","../src/helpers/helpers.canvas.ts","../src/helpers/helpers.config.ts","../src/helpers/helpers.curve.ts","../src/helpers/helpers.easing.ts","../src/helpers/helpers.interpolation.ts","../src/helpers/helpers.options.ts","../src/helpers/helpers.rtl.ts","../src/helpers/helpers.segment.js","../src/core/core.interaction.js","../src/core/core.layouts.js","../src/platform/platform.base.js","../src/platform/platform.basic.js","../src/platform/platform.dom.js","../src/platform/index.js","../src/core/core.animation.js","../src/core/core.animations.js","../src/core/core.datasetController.js","../src/core/core.element.ts","../src/core/core.scale.autoskip.js","../src/core/core.scale.js","../src/core/core.typedRegistry.js","../src/core/core.registry.js","../src/core/core.plugins.js","../src/core/core.config.js","../src/core/core.controller.js","../src/core/core.adapters.ts","../src/controllers/controller.bar.js","../src/controllers/controller.doughnut.js","../src/controllers/controller.polarArea.js","../src/controllers/controller.bubble.js","../src/controllers/controller.line.js","../src/controllers/controller.pie.js","../src/controllers/controller.radar.js","../src/controllers/controller.scatter.js","../src/elements/element.arc.ts","../src/elements/element.line.js","../src/elements/element.point.ts","../src/elements/element.bar.js","../src/scales/scale.category.js","../src/scales/scale.linearbase.js","../src/scales/scale.linear.js","../src/scales/scale.logarithmic.js","../src/scales/scale.radialLinear.js","../src/scales/scale.time.js","../src/scales/scale.timeseries.js","../src/plugins/plugin.colors.ts","../src/plugins/plugin.decimation.js","../src/plugins/plugin.filler/filler.segment.js","../src/plugins/plugin.filler/filler.helper.js","../src/plugins/plugin.filler/filler.options.js","../src/plugins/plugin.filler/filler.target.stack.js","../src/plugins/plugin.filler/simpleArc.js","../src/plugins/plugin.filler/filler.target.js","../src/plugins/plugin.filler/filler.drawing.js","../src/plugins/plugin.filler/index.js","../src/plugins/plugin.legend.js","../src/plugins/plugin.title.js","../src/plugins/plugin.subtitle.js","../src/plugins/plugin.tooltip.js","../src/index.umd.ts"],"sourcesContent":["/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || value === undefined;\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): any {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>(items);\n\n  if (set.size === items.length) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\nimport {isNullOrUndef} from './helpers.core.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, vScale, _parsed} = meta;\n    const spanGaps = meta.dataset ? meta.dataset.options ? meta.dataset.options.spanGaps : null : null;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo);\n      if (spanGaps) {\n        const distanceToDefinedLo = (_parsed\n          .slice(0, start + 1)\n          .reverse()\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        start -= Math.max(0, distanceToDefinedLo);\n      }\n      start = _limitValue(start, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n      let end = Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1);\n      if (spanGaps) {\n        const distanceToDefinedHi = (_parsed\n          .slice(end - 1)\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        end += Math.max(0, distanceToDefinedHi);\n      }\n      count = _limitValue(end, start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n\n    // When datasets have values approaching Number.MAX_VALUE, the tick calculations might result in\n    // infinity and eventually NaN. Passing NaN for minimumFractionDigits or maximumFractionDigits\n    // will make the number formatter throw. So instead we check for isNaN and use a fallback value.\n    //\n    // toFixed has a max of 20 decimal places\n    const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    clip: true,\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import type {ChartArea, Scale} from '../types/index.js';\nimport type Chart from '../core/core.controller.js';\nimport type {ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  chart.height = Math.floor(chart.height);\n  chart.width = Math.floor(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    if (_isDomSupported()) {\n      window.addEventListener('test', null, options);\n      window.removeEventListener('test', null, options);\n    }\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import type {\n  Chart,\n  Point,\n  FontSpec,\n  CanvasFontSpec,\n  PointStyle,\n  RenderTextOpts,\n  BackdropOptions\n} from '../types/index.js';\nimport type {\n  TRBL,\n  SplinePoint,\n  RoundedRect,\n  TRBLCorners\n} from '../types/geometric.js';\nimport {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font: FontSpec) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(\n  ctx: CanvasRenderingContext2D,\n  data: Record<string, number>,\n  gc: string[],\n  longest: number,\n  string: string\n) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\ntype Thing = string | undefined | null\ntype Things = (Thing | Thing[])[]\n\n/**\n * @private\n */\n// eslint-disable-next-line complexity\nexport function _longestText(\n  ctx: CanvasRenderingContext2D,\n  font: string,\n  arrayOfThings: Things,\n  cache?: {data?: Record<string, number>, garbageCollect?: string[], font?: string}\n) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i: number, j: number, jlen: number, thing: Thing | Thing[], nestedThing: Thing | Thing[];\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && !isArray(thing)) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart: Chart, pixel: number, width: number) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n */\nexport function clearCanvas(canvas?: HTMLCanvasElement, ctx?: CanvasRenderingContext2D) {\n  if (!ctx && !canvas) {\n    return;\n  }\n\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport interface DrawPointOptions {\n  pointStyle: PointStyle;\n  rotation?: number;\n  radius: number;\n  borderWidth: number;\n}\n\nexport function drawPoint(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number\n) {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  drawPointLegend(ctx, options, x, y, null);\n}\n\n// eslint-disable-next-line complexity\nexport function drawPointLegend(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number,\n  w: number\n) {\n  let type: string, xOffset: number, yOffset: number, size: number, cornerRadius: number, width: number, xOffsetW: number, yOffsetW: number;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n    default:\n      if (w) {\n        ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n      } else {\n        ctx.arc(x, y, radius, 0, TAU);\n      }\n      ctx.closePath();\n      break;\n    case 'triangle':\n      width = w ? w / 2 : radius;\n      ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      ctx.closePath();\n      break;\n    case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n      cornerRadius = radius * 0.516;\n      size = radius - cornerRadius;\n      xOffset = Math.cos(rad + QUARTER_PI) * size;\n      xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      yOffset = Math.sin(rad + QUARTER_PI) * size;\n      yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n      ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n      ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n      ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n      ctx.closePath();\n      break;\n    case 'rect':\n      if (!rotation) {\n        size = Math.SQRT1_2 * radius;\n        width = w ? w / 2 : size;\n        ctx.rect(x - width, y - size, 2 * width, 2 * size);\n        break;\n      }\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'rectRot':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      ctx.closePath();\n      break;\n    case 'crossRot':\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'cross':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'star':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      rad += QUARTER_PI;\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'line':\n      xOffset = w ? w / 2 : Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      break;\n    case 'dash':\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n      break;\n    case false:\n      ctx.closePath();\n      break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */\nexport function _isPointInArea(\n  point: Point,\n  area: TRBL,\n  margin?: number\n) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx: CanvasRenderingContext2D, area: TRBL) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx: CanvasRenderingContext2D) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(\n  ctx: CanvasRenderingContext2D,\n  previous: Point,\n  target: Point,\n  flip?: boolean,\n  mode?: string\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(\n  ctx: CanvasRenderingContext2D,\n  previous: SplinePoint,\n  target: SplinePoint,\n  flip?: boolean\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\nfunction setRenderOpts(ctx: CanvasRenderingContext2D, opts: RenderTextOpts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  line: string,\n  opts: RenderTextOpts\n) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx: CanvasRenderingContext2D, opts: BackdropOptions) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color as string;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(\n  ctx: CanvasRenderingContext2D,\n  text: string | string[],\n  x: number,\n  y: number,\n  font: CanvasFontSpec,\n  opts: RenderTextOpts = {}\n) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i: number, line: string;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += Number(font.lineHeight);\n  }\n\n  ctx.restore();\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */\nexport function addRoundedRectPath(\n  ctx: CanvasRenderingContext2D,\n  rect: RoundedRect & { radius: TRBLCorners }\n) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartMeta} from '../types/index.js';\nimport type {\n  ResolverObjectKey,\n  ResolverCache,\n  ResolverProxy,\n  DescriptorDefaults,\n  Descriptor,\n  ContextCache,\n  ContextProxy\n} from './helpers.config.types.js';\nimport {isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\nexport * from './helpers.config.types.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  scopes: T,\n  prefixes = [''],\n  rootScopes?: R,\n  fallback?: ResolverObjectKey,\n  getTarget = () => scopes[0]\n) {\n  const finalRootScopes = rootScopes || scopes;\n  if (typeof fallback === 'undefined') {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache: ResolverCache<T, R> = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: finalRootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope: AnyObject) => _createResolver([scope, ...scopes], prefixes, finalRootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop: string) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop: string) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop: string, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  }) as ResolverProxy<T, R>;\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */\nexport function _attachContext<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  proxy: ResolverProxy<T, R>,\n  context: AnyObject,\n  subProxy?: ResolverProxy<T, R>,\n  descriptorDefaults?: DescriptorDefaults\n) {\n  const cache: ContextCache<T, R> = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx: AnyObject) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope: AnyObject) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  }) as ContextProxy<T, R>;\n}\n\n/**\n * @private\n */\nexport function _descriptors(\n  proxy: ResolverCache,\n  defaults: DescriptorDefaults = {scriptable: true, indexable: true}\n): Descriptor {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix: string, name: string) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop: string, value: unknown) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(\n  target: AnyObject,\n  prop: string,\n  resolve: () => unknown\n) {\n  if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(\n  target: ContextCache,\n  prop: string,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(\n  prop: string,\n  getValue: (ctx: AnyObject, sub: AnyObject) => unknown,\n  target: ContextCache,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  let value = getValue(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(\n  prop: string,\n  value: unknown[],\n  target: ContextCache,\n  isIndexable: (key: string) => boolean\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n    return value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(\n  fallback: ResolverObjectKey | ((prop: ResolverObjectKey, value: unknown) => ResolverObjectKey),\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key: ResolverObjectKey, parent: AnyObject) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(\n  set: Set<AnyObject>,\n  parentScopes: AnyObject[],\n  key: ResolverObjectKey,\n  parentFallback: ResolverObjectKey,\n  value: unknown\n) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(\n  parentScopes: AnyObject[],\n  resolver: ResolverCache,\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set<AnyObject>();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (typeof fallback !== 'undefined' && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop as string, value));\n}\n\nfunction addScopesFromKey(\n  set: Set<AnyObject>,\n  allScopes: AnyObject[],\n  key: ResolverObjectKey,\n  fallback: ResolverObjectKey,\n  item: unknown\n) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(\n  resolver: ResolverCache,\n  prop: string,\n  value: unknown\n) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(\n  prop: string,\n  prefixes: string[],\n  scopes: AnyObject[],\n  proxy: ResolverProxy\n) {\n  let value: unknown;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (typeof value !== 'undefined') {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key: string, scopes: AnyObject[]) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (typeof value !== 'undefined') {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target: ResolverCache) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes: AnyObject[]) {\n  const set = new Set<string>();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(\n  meta: ChartMeta<'line' | 'scatter'>,\n  data: AnyObject[],\n  start: number,\n  count: number\n) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array<{r: unknown}>(count);\n  let i: number, ilen: number, index: number, item: AnyObject;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\nimport type {SplinePoint} from '../types/geometric.js';\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","import type {Point, SplinePoint} from '../types/geometric.js';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n","import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec, Point} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math.js';\nimport {createContext} from './helpers.options.js';\nimport {isPatternOrGradient} from './helpers.color.js';\n\n/**\n * @typedef { import('../elements/element.line.js').default } LineElement\n * @typedef { import('../elements/element.point.js').default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  if (!prevStyle) {\n    return false;\n  }\n  const cache = [];\n  const replacer = function(key, value) {\n    if (!isPatternOrGradient(value)) {\n      return value;\n    }\n    if (!cache.includes(value)) {\n      cache.push(value);\n    }\n    return cache.indexOf(value);\n  };\n  return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea, isNullOrUndef} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  const spanGaps = metaset.dataset ? metaset.dataset.options ? metaset.dataset.options.spanGaps : null : null;\n\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      const result = lookupMethod(data, axis, value);\n      if (spanGaps) {\n        const {vScale} = controller._cachedMeta;\n        const {_parsed} = metaset;\n\n        const distanceToDefinedLo = (_parsed\n          .slice(0, result.lo + 1)\n          .reverse()\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        result.lo -= Math.max(0, distanceToDefinedLo);\n\n        const distanceToDefinedHi = (_parsed\n          .slice(result.hi)\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        result.hi += Math.max(0, distanceToDefinedHi);\n      }\n      return result;\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  if (node) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction removeListener(chart, type, listener) {\n  if (chart && chart.canvas) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = canvas && _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  let found = false;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      found = true;\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n\n  if (!found && !options.all) {\n    return 0;\n  }\n\n  return value;\n}\n\nfunction convertObjectDataToArray(data, meta) {\n  const {iScale, vScale} = meta;\n  const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n  const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      [iAxisKey]: key,\n      [vAxisKey]: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (and thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal metadata accordingly.\n\n    if (isObject(data)) {\n      const meta = this._cachedMeta;\n      this._data = convertObjectDataToArray(data, meta);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n      meta._stacked = isStacked(meta.vScale, meta);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('../types/index.js').Chart } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  /** @type {CanvasTextAlign} */\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = /** @type {string} */ (label[j]);\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        case 'inner':\n          if (i === ilen - 1) {\n            left -= width;\n          } else if (i > 0) {\n            left -= width / 2;\n          }\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, ...scaleOptions) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n  for (const opts of scaleOptions) {\n    const axis = opts.axis\n      || axisFromPosition(opts.position)\n      || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n    if (axis) {\n      return axis;\n    }\n  }\n  throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {axis};\n  }\n}\n\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    const boundDs = config.data.datasets.filter((d) => d.xAxisID === id || d.yAxisID === id);\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n  return {};\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).some((key) => isFunction(value[key]));\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getSizeForArea(scale, chartArea, field) {\n  return scale.options.clip ? scale[field] : chartArea[field];\n}\n\nfunction getDatasetArea(meta, chartArea) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: getSizeForArea(xScale, chartArea, 'left'),\n      right: getSizeForArea(xScale, chartArea, 'right'),\n      top: getSizeForArea(yScale, chartArea, 'top'),\n      bottom: getSizeForArea(yScale, chartArea, 'bottom')\n    };\n  }\n  return chartArea;\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      // Unset pending resize request now to avoid possible recursion within _resize\n      this._resizeBeforeDraw = null;\n      this._resize(width, height);\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta, this.chartArea);\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the event inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n","import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n    const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n    const iScaleValue = currentParsed && currentParsed[iScale.axis];\n\n    const skipNull = (meta) => {\n      const parsed = meta._parsed.find(item => item[iScale.axis] === iScaleValue);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash'),\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {valueOrDefault} from '../helpers/helpers.core.js';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DoughnutController from './controller.doughnut.js';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {_parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      // https://github.com/chartjs/Chart.js/issues/11333\n      if (!this.datasetElementType) {\n        this.addElements();\n      }\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    } else if (this.datasetElementType) {\n      // https://github.com/chartjs/Chart.js/issues/11333\n      delete meta.dataset;\n      this.datasetElementType = false;\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle, borderDash, borderDashOffset} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  ctx.setLineDash(borderDash || []);\n  ctx.lineDashOffset = borderDashOffset;\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n    const betweenAngles = _circumference >= TAU || nonZeroBetween;\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @returns {any}\n */\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n    ticks.push({value: tickValue});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction createPointLabelItem(scale, index, itemOpts) {\n  const outerDistance = scale.drawingArea;\n  const {extra, additionalAngle, padding, size} = itemOpts;\n  const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n  const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n  const y = yForAngle(pointLabelPosition.y, size.h, angle);\n  const textAlign = getTextAlignForAngle(angle);\n  const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n  return {\n    // if to draw or overlapped\n    visible: true,\n\n    // Text position\n    x: pointLabelPosition.x,\n    y,\n\n    // Text rendering data\n    textAlign,\n\n    // Bounding box\n    left,\n    top: y,\n    right: left + size.w,\n    bottom: y + size.h\n  };\n}\n\nfunction isNotOverlapped(item, area) {\n  if (!area) {\n    return true;\n  }\n  const {left, top, right, bottom} = item;\n  const apexesInArea = _isPointInArea({x: left, y: top}, area) || _isPointInArea({x: left, y: bottom}, area) ||\n    _isPointInArea({x: right, y: top}, area) || _isPointInArea({x: right, y: bottom}, area);\n  return !apexesInArea;\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const {centerPointLabels, display} = opts.pointLabels;\n  const itemOpts = {\n    extra: getTickBackdropHeight(opts) / 2,\n    additionalAngle: centerPointLabels ? PI / valueCount : 0\n  };\n  let area;\n\n  for (let i = 0; i < valueCount; i++) {\n    itemOpts.padding = padding[i];\n    itemOpts.size = labelSizes[i];\n\n    const item = createPointLabelItem(scale, i, itemOpts);\n    items.push(item);\n    if (display === 'auto') {\n      item.visible = isNotOverlapped(item, area);\n      if (item.visible) {\n        area = item;\n      }\n    }\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabelBox(ctx, opts, item) {\n  const {left, top, right, bottom} = item;\n  const {backdropColor} = opts;\n\n  if (!isNullOrUndef(backdropColor)) {\n    const borderRadius = toTRBLCorners(opts.borderRadius);\n    const padding = toPadding(opts.backdropPadding);\n    ctx.fillStyle = backdropColor;\n\n    const backdropLeft = left - padding.left;\n    const backdropTop = top - padding.top;\n    const backdropWidth = right - left + padding.width;\n    const backdropHeight = bottom - top + padding.height;\n\n    if (Object.values(borderRadius).some(v => v !== 0)) {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: backdropLeft,\n        y: backdropTop,\n        w: backdropWidth,\n        h: backdropHeight,\n        radius: borderRadius,\n      });\n      ctx.fill();\n    } else {\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const item = scale._pointLabelItems[i];\n    if (!item.visible) {\n      // overlapping\n      continue;\n    }\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    drawPointLabelBox(ctx, optsAtIndex, item);\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign} = item;\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash || []);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0 || (index === 0 && this.min < 0)) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if ((index === 0 && this.min >= 0) && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n        strokeColor: optsAtIndex.textStrokeColor,\n        strokeWidth: optsAtIndex.textStrokeWidth,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if it's not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @protected\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort(sorter).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guesstimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time.js';\nimport {_lookupByKey} from '../helpers/helpers.collection.js';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n    * Generates all timestamps defined in the data.\n    * Important: this method can return ticks outside the min and max range, it's the\n    * responsibility of the calling code to clamp values if needed.\n    * @protected\n    */\n  _generate() {\n    const min = this.min;\n    const max = this.max;\n    let timestamps = super.getDataTimestamps();\n    if (!timestamps.includes(min) || !timestamps.length) {\n      timestamps.splice(0, 0, min);\n    }\n    if (!timestamps.includes(max) || timestamps.length === 1) {\n      timestamps.push(max);\n    }\n    return timestamps.sort((a, b) => a - b);\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n","import {DoughnutController, PolarAreaController, defaults} from '../index.js';\nimport type {Chart, ChartDataset} from '../types.js';\n\nexport interface ColorsPluginOptions {\n  enabled?: boolean;\n  forceOverride?: boolean;\n}\n\ninterface ColorsDescriptor {\n  backgroundColor?: unknown;\n  borderColor?: unknown;\n}\n\nconst BORDER_COLORS = [\n  'rgb(54, 162, 235)', // blue\n  'rgb(255, 99, 132)', // red\n  'rgb(255, 159, 64)', // orange\n  'rgb(255, 205, 86)', // yellow\n  'rgb(75, 192, 192)', // green\n  'rgb(153, 102, 255)', // purple\n  'rgb(201, 203, 207)' // grey\n];\n\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i: number) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i: number) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction colorizeDefaultDataset(dataset: ChartDataset, i: number) {\n  dataset.borderColor = getBorderColor(i);\n  dataset.backgroundColor = getBackgroundColor(i);\n\n  return ++i;\n}\n\nfunction colorizeDoughnutDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n\n  return i;\n}\n\nfunction colorizePolarAreaDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n\n  return i;\n}\n\nfunction getColorizer(chart: Chart) {\n  let i = 0;\n\n  return (dataset: ChartDataset, datasetIndex: number) => {\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n\n    if (controller instanceof DoughnutController) {\n      i = colorizeDoughnutDataset(dataset, i);\n    } else if (controller instanceof PolarAreaController) {\n      i = colorizePolarAreaDataset(dataset, i);\n    } else if (controller) {\n      i = colorizeDefaultDataset(dataset, i);\n    }\n  };\n}\n\nfunction containsColorsDefinitions(\n  descriptors: ColorsDescriptor[] | Record<string, ColorsDescriptor>\n) {\n  let k: number | string;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction containsColorsDefinition(\n  descriptor: ColorsDescriptor\n) {\n  return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\n\nfunction containsDefaultColorsDefenitions() {\n  return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\n\nexport default {\n  id: 'colors',\n\n  defaults: {\n    enabled: true,\n    forceOverride: false\n  } as ColorsPluginOptions,\n\n  beforeLayout(chart: Chart, _args, options: ColorsPluginOptions) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      data: {datasets},\n      options: chartOptions\n    } = chart.config;\n    const {elements} = chartOptions;\n\n    const containsColorDefenition = (\n      containsColorsDefinitions(datasets) ||\n      containsColorsDefinition(chartOptions) ||\n      (elements && containsColorsDefinitions(elements)) ||\n      containsDefaultColorsDefenitions());\n\n    if (!options.forceOverride && containsColorDefenition) {\n      return;\n    }\n\n    const colorizer = getColorizer(chart);\n\n    datasets.forEach(colorizer);\n  }\n};\n","import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers/index.js';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: data,\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers/index.js';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {isArray} from '../../helpers/index.js';\nimport {_pointsFromSegments} from './filler.segment.js';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.line.js').default } LineElement\n * @typedef { import('../../types/index.js').FillTarget } FillTarget\n * @typedef { import('../../types/index.js').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {_isBetween} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n","import {TAU} from '../../helpers/index.js';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n","import {isFinite} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\nimport {_getTargetPixel, _getTargetValue} from './filler.options.js';\nimport {_buildStackLine} from './filler.target.stack.js';\nimport {simpleArc} from './simpleArc.js';\n\n/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n","import {clipArea, unclipArea} from '../../helpers/index.js';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment.js';\nimport {_getTarget} from './filler.target.js';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line.js';\nimport {_drawfill} from './filler.drawing.js';\nimport {_shouldApplyFill} from './filler.helper.js';\nimport {_decodeFill, _resolveTarget} from './filler.options.js';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let xSet = new Set();\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        xSet.add(pos.x);\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    // No visible items where found, return false so we don't have to divide by 0 which reduces in NaN\n    if (count === 0 || xSet.size === 0) {\n      return false;\n    }\n\n    const xAverage = [...xSet].reduce((a, b) => a + b) / xSet.size;\n\n    return {\n      x: xAverage,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColor = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.fillStyle = labelColor.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : (labelColor.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.setLineDash(labelColor.borderDash || []);\n      ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColor.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      // But make sure that active elements are still valid.\n      return lastActive.filter(i =>\n        this.chart.data.datasets[i.datasetIndex] &&\n        this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined\n      );\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-nocheck\n\n/**\n * @namespace Chart\n */\nimport Chart from './core/core.controller.js';\n\nimport * as helpers from './helpers/index.js';\nimport _adapters from './core/core.adapters.js';\nimport Animation from './core/core.animation.js';\nimport animator from './core/core.animator.js';\nimport Animations from './core/core.animations.js';\nimport * as controllers from './controllers/index.js';\nimport DatasetController from './core/core.datasetController.js';\nimport Element from './core/core.element.js';\nimport * as elements from './elements/index.js';\nimport Interaction from './core/core.interaction.js';\nimport layouts from './core/core.layouts.js';\nimport * as platforms from './platform/index.js';\nimport * as plugins from './plugins/index.js';\nimport registry from './core/core.registry.js';\nimport Scale from './core/core.scale.js';\nimport * as scales from './scales/index.js';\nimport Ticks from './core/core.ticks.js';\n\n// Register built-ins\nChart.register(controllers, scales, elements, plugins);\n\nChart.helpers = {...helpers};\nChart._adapters = _adapters;\nChart.Animation = Animation;\nChart.Animations = Animations;\nChart.animator = animator;\nChart.controllers = registry.controllers.items;\nChart.DatasetController = DatasetController;\nChart.Element = Element;\nChart.elements = elements;\nChart.Interaction = Interaction;\nChart.layouts = layouts;\nChart.platforms = platforms;\nChart.Scale = Scale;\nChart.Ticks = Ticks;\n\n// Compatibility with ESM extensions\nObject.assign(Chart, controllers, scales, elements, plugins, platforms);\nChart.Chart = Chart;\n\nif (typeof window !== 'undefined') {\n  window.Chart = Chart;\n}\n\nexport default Chart;\n\n"],"names":["noop","uid","id","isNullOrUndef","value","isArray","Array","type","Object","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","callback","fn","args","thisArg","apply","each","loopable","reverse","i","len","keys","length","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","clone","source","map","target","create","klen","k","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","v","x","o","y","_splitKey","parts","split","tmp","part","push","resolveObjectKey","obj","resolver","_getKeyResolver","_capitalize","str","charAt","toUpperCase","defined","isFunction","setsEqual","a","b","size","item","has","_isClickEvent","e","PI","Math","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","round","niceRange","pow","floor","fraction","_factorize","result","sqrt","sort","pop","isNumber","n","isNaN","almostWhole","rounded","_setMinAndMaxByKey","array","property","min","max","toRadians","degrees","toDegrees","radians","_decimalPlaces","isFiniteNumber","p","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","enumerable","forEach","method","base","res","this","object","unlistenArrayEvents","stub","splice","_arrayUnique","items","set","Set","from","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","vScale","_parsed","spanGaps","dataset","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","distanceToDefinedLo","findIndex","point","distanceToDefinedHi","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","assign","Animator","constructor","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","callbacks","numSteps","duration","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","get","complete","progress","listen","event","cb","add","reduce","acc","cur","_duration","stop","cancel","remove","delete","animator","lim","l","h","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","c","d","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","hueValue","calln","hsl2rgb","hue","hueParse","m","exec","p1","p2","hwb2rgb","hsv2rgb","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","modHSL","ratio","proto","fromObject","input","functionParse","rgbParse","Color","ret","_rgb","_valid","valid","rgbString","hslString","mix","color","weight","c1","c2","w2","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","getNumberFormat","format","formatters","numeric","tickValue","ticks","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","overrides","descriptors","getScope","node","root","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","local","appliers","defaults","_scriptable","startsWith","_indexable","_fallback","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","bottom","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_isDomSupported","document","_getParentNode","domNode","parent","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","pos","height","useOffsetPos","shadowRoot","getRelativePosition","canvas","currentDevicePixelRatio","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","rect","getBoundingClientRect","clientX","clientY","getCanvasPosition","xOffset","yOffset","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxWidth","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","matches","match","toFontString","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","halfWidth","clearCanvas","getContext","resetTransform","clearRect","drawPoint","drawPointLegend","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","sin","cos","lineTo","SQRT1_2","fill","borderWidth","stroke","_isPointInArea","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","decorateText","line","opts","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","fillStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","translation","textAlign","textBaseline","setRenderOpts","backdrop","strokeText","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","_createResolver","scopes","prefixes","rootScopes","fallback","getTarget","finalRootScopes","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","prop","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","getValue","Error","join","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","resolve","resolveFallback","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","capControlPoint","pt","_updateBezierControlPoints","controlPoints","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","atEdge","elasticIn","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","LINE_HEIGHT","FONT_STYLE","toLineHeight","numberOrZero","_readValueToProps","props","objProps","read","toTRBL","toTRBLCorners","toPadding","toFont","console","warn","inputs","info","cacheable","_addGrace","minmax","change","keepZero","createContext","parentContext","getRtlAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","_computeSegments","segmentOptions","_loop","findStartAndEnd","splitByStyles","solidSegments","_fullLoop","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","pixelSize","fontStyle","fontFamily","binarySearch","metaset","controller","_cachedMeta","lookupMethod","_reversePixels","_sharedOptions","getRange","evaluateInteractionItems","position","handler","metasets","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","chartArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","center","getCenterPoint","getNearestItems","startAngle","endAngle","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","getDatasetMeta","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","stacks","wrap","stack","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","factor","horizontal","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","update","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","configure","minPadding","layoutBoxes","isHorizontal","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","concat","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","total","freeze","updatePos","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","config","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","entry","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","interpolators","boolean","c0","helpersColor","number","Animation","cfg","currentValue","_fn","_easing","_start","_target","_prop","_from","_to","_promises","elapsed","wait","promises","Promise","rej","resolved","Animations","_properties","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","_getSortedDatasetMetas","applyStack","dsIndex","singleMode","otherValue","found","isStacked","stacked","getOrCreateStack","stackKey","indexValue","subStack","getLastIndexInStack","positive","getMatchingVisibleMetas","updateStacks","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","scaleID","_getOtherScale","reset","_destroy","_dataCheck","iAxisKey","vAxisKey","adata","convertObjectDataToArray","isExtensible","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","_length","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","spacing","ceil","skipMajors","evenMajorSpacing","diff","getEvenSpacing","factors","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","edge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","_startPixel","_endPixel","lineValue","getPixelForTick","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","super","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_cache","_dataLimitsCached","init","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","startPixel","endPixel","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","getValueForPixel","getPixelForDecimal","decimal","getDecimalForPixel","getBasePixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","getLineWidthForValue","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","callCallback","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","idMatchesAxis","determineAxis","scaleOptions","getAxisFromDataset","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","initOptions","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","getSizeForArea","field","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","_dataset","buildOrUpdateControllers","newControllers","order","isDatasetVisible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","getVisibleDatasetCount","setDatasetVisibility","toggleDataVisibility","getDataVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","lastEvent","determineLastEvent","abstract","DateAdapterBase","members","formats","startOf","endOf","_adapters","_date","computeMinSampleSize","$bar","visibleMetas","getAllScaleValues","curr","updateMinAndPrev","parseValue","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","borderSkipped","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","DoughnutController","animateRotate","animateScale","cutout","circumference","legend","generateLabels","fontColor","legendItem","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","ratioX","ratioY","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","PolarAreaController","angleLines","circular","pointLabels","bind","_updateRadius","cutoutPercentage","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","categoryPercentage","barPercentage","grouped","_index_","_value_","bars","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","_getStacks","currentParsed","iScaleValue","skipNull","find","_getStackCount","_getStackIndex","pixels","barThickness","stackCount","baseValue","minBarLength","actualBase","floating","barSign","halfGrid","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","pointPosition","getPointPositionForValue","parseBorderRadius","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","inner","lineJoin","angleMargin","clipArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","_interpolate","_getInterpolationMethod","interpolated","hitRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","outer","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","chartX","chartY","rAdjust","nonZeroBetween","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","addRectPath","mouseX","mouseY","inXRange","inYRange","hoverRadius","findOrAddLabel","addedLabels","unshift","addIfString","lastIndexOf","_getLabelForValue","relativeLabelSize","minSpacing","LinearScaleBase","_startValue","_endValue","_valueRange","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","maxTicks","stepSize","computeTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","decimalPlaces","generateTicks","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","minExp","exp","startExp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","determineLimits","fitWithPointLabels","_padding","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","textSize","updateLimits","setCenterPoint","_pointLabelItems","itemOpts","extra","createPointLabelItem","isNotOverlapped","buildPointLabelItems","hLimits","vLimits","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","labelCount","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","drawPointLabels","gridLineOpts","drawRadiusLine","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","adapters","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","_addedLabels","added","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","getColorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","containsColorsDefinitions","plugin_colors","forceOverride","_args","chartOptions","containsColorDefenition","colorizer","cleanDecimatedDataset","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","helpers","platforms"],"mappings":"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","x_google_ignoreList":[5]}